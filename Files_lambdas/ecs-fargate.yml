AWSTemplateFormatVersion: '2010-09-09'
Description: Plantilla para desplegar una aplicación web React en ECS Fargate

Parameters:
  VpcId:
    Type: String
    Description: ID de la VPC existente
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Lista de IDs de subredes públicas
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ID del grupo de seguridad

Resources:
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: SpaceXWebCluster

  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: SpaceXWebTask
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: spacex-web
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/spacex-web:latest'
          PortMappings:
            - ContainerPort: 3000
          Essential: true
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref AWS_ACCESS_KEY_ID
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AWS_SECRET_ACCESS_KEY

  ECSExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statementкет
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                Resource: arn:aws:dynamodb:*:*:table/SpaceXLaunches

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: SpaceXWebALB
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref SecurityGroupId
      Scheme: internet-facing
      Type: application

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: SpaceXWebTargetGroup
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /

  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: SpaceXWebService
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: spacex-web
          ContainerPort: 3000
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref SecurityGroupId

Outputs:
  LoadBalancerURL:
    Description: URL pública del Load Balancer
    Value: !Sub 'http://${LoadBalancer.DNSName}'